name: Beeware Builds

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '.cirrus.yml'
    branches:
      - master
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '.cirrus.yml'
    branches:
      - '**'

jobs:
  beeware:
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    continue-on-error: true
    strategy:
      matrix:
        os: [ Ubuntu, MacOS, Windows ]
        python-version: [3.8]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}

      - name: Set up Tox
        run: python -m pip install tox

      - name: Build Distribution
        run: tox -e briefcase

      - name: Upload beeware configuration
        uses: actions/upload-artifact@v2
        with:
          name: briefcase.toml
          path: briefcase.toml

      - name: Get Short SHA
        id: vars
        run: echo "::set-output name=sha_short::${{ github.sha }}"

      - name: Upload AppImage
        uses: actions/upload-artifact@v2
        if: matrix.os == 'Ubuntu'
        with:
          name: poetry-linux-appimage-${{ steps.vars.outputs.sha_short }}
          path: linux/poetry-*.AppImage

      - name: Upload MacOS App
        uses: actions/upload-artifact@v2
        if: matrix.os == 'Mac'
        with:
          name: poetry-macOS-app-${{ steps.vars.outputs.sha_short }}
          path: macOS/poetry/poetry.app

      - name: Upload MacOS App
        uses: actions/upload-artifact@v2
        if: matrix.os == 'Windows'
        with:
          name: poetry-Windows-msi-${{ steps.vars.outputs.sha_short }}
          path: windows/poetry-*.msi
