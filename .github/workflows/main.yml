name: Tests

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '.cirrus.yml'
    branches:
      - master
      - develop
  pull_request:
    paths-ignore:
      - 'docs/**'
      - '.cirrus.yml'
    branches:
      - '**'

<<<<<<< HEAD
concurrency:
  group: tests-${{ github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  tests:
    name: ${{ matrix.os }} / ${{ matrix.python-version }} ${{ matrix.suffix }}
    runs-on: ${{ matrix.image }}
    strategy:
      matrix:
        os: [Ubuntu, macOS, Windows]
        python-version: ["3.6", "3.7", "3.8", "3.9", "3.10"]
        include:
          - os: Ubuntu
            image: ubuntu-latest
          - os: Windows
            image: windows-2022
          - os: macOS
            image: macos-11
      fail-fast: false
    defaults:
      run:
        shell: bash
=======
jobs:
  tests:
    name: ${{ matrix.os }} / ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}-latest
    continue-on-error: ${{ matrix.experimental }}
    strategy:
      matrix:
        os: [Ubuntu, MacOS, Windows]
        python-version: [3.6, 3.7, 3.8, 3.9]
        experimental: [false]
        bootstrap-args: [""]
        include:
          - os: Ubuntu
            python-version: "3.10.0-alpha - 3.10.0"
            experimental: true
            bootstrap-args: "--git https://github.com/python-poetry/poetry.git"
      fail-fast: false
>>>>>>> d7cf7a8e (Fix `remove` command to handle `.venv` dirs)
    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get full Python version
        id: full-python-version
<<<<<<< HEAD
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Bootstrap poetry
        run: |
          curl -sL https://install.python-poetry.org | python - -y ${{ matrix.bootstrap-args }}

      - name: Update PATH
        if: ${{ matrix.os != 'Windows' }}
=======
        shell: bash
        run: echo ::set-output name=version::$(python -c "import sys; print('-'.join(str(v) for v in sys.version_info))")

      - name: Bootstrap poetry
        shell: bash
        run: |
          curl -sL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py \
            | python - -y ${{ matrix.bootstrap-args }}

      - name: Update PATH
        if: ${{ matrix.os != 'Windows' }}
        shell: bash
>>>>>>> d7cf7a8e (Fix `remove` command to handle `.venv` dirs)
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Update Path for Windows
        if: ${{ matrix.os == 'Windows' }}
<<<<<<< HEAD
        run: echo "$APPDATA\Python\Scripts" >> $GITHUB_PATH

      - name: Configure poetry
=======
        shell: bash
        run: echo "$APPDATA\Python\Scripts" >> $GITHUB_PATH

      - name: Configure poetry
        shell: bash
>>>>>>> d7cf7a8e (Fix `remove` command to handle `.venv` dirs)
        run: poetry config virtualenvs.in-project true

      - name: Set up cache
        uses: actions/cache@v2
        id: cache
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.full-python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}

      - name: Ensure cache is healthy
        if: steps.cache.outputs.cache-hit == 'true'
<<<<<<< HEAD
        run: timeout 10s poetry run pip --version || rm -rf .venv

      - name: Install dependencies
        run: poetry install

      - name: Install pytest plugin
        run: poetry run pip install pytest-github-actions-annotate-failures

      - name: Run pytest
=======
        shell: bash
        run: timeout 10s poetry run pip --version || rm -rf .venv

      - name: Install dependencies
        shell: bash
        run: poetry install

      - name: Run pytest
        shell: bash
>>>>>>> d7cf7a8e (Fix `remove` command to handle `.venv` dirs)
        run: poetry run python -m pytest -p no:sugar -q tests/
