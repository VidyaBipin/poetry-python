name: Tests

on:
  push:
  pull_request:
  merge_group:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

defaults:
  run:
    shell: bash

jobs:
  changes:
    name: Detect changed files
    runs-on: ubuntu-latest
    outputs:
      project: ${{ steps.changes.outputs.project }}
      fixtures-pypi: ${{ steps.changes.outputs.fixtures-pypi }}
      mypy: ${{ steps.changes.outputs.mypy }}
      pytest: ${{ steps.changes.outputs.pytest }}
      pytest-export: ${{ steps.changes.outputs.pytest-export }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            workflow: &workflow
              - '.github/workflows/tests.yaml'
            project: &project
              - *workflow
              - 'poetry.lock'
              - 'pyproject.toml'
            fixtures-pypi:
              - *workflow
              - 'tests/repositories/fixtures/pypi.org/**'
            mypy:
              - *project
              - 'src/**.py'
            pytest:
              - *project
              - 'src/**.py'
              - 'tests/**'
            pytest-export:
              - *project
              - 'src/**.py'

  lockfile:
    name: Check poetry.lock
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.project == 'true'
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/bootstrap-poetry

      - run: poetry check --lock

  fixtures-pypi:
    name: Check fixtures (PyPI)
    runs-on: ubuntu-latest
    needs: changes
    if: needs.changes.outputs.fixtures-pypi == 'true'
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/bootstrap-poetry

      - run: poetry install --sync --only main,test

      - run: poetry run env PYTHONPATH="$GITHUB_WORKSPACE" python tests/repositories/fixtures/pypi.org/generate.py

      - run: git diff --exit-code --stat HEAD tests/repositories/fixtures/pypi.org

  mypy:
    name: mypy [${{ matrix.os.name }} / Python ${{ matrix.python-version }}]
    runs-on: ${{ matrix.os.image }}
    if: needs.changes.outputs.mypy == 'true'
    needs:
      - changes
      - lockfile
    strategy:
      matrix:
        os:
          - name: Ubuntu
            image: ubuntu-22.04
          - name: macOS
            image: macos-12
          - name: Windows
            image: windows-2022
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/bootstrap-poetry
        with:
          python-version: ${{ matrix.python-version }}

      - run: poetry install --sync

      - run: poetry run mypy

  pytest:
    name: pytest [${{ matrix.os.name }} / Python ${{ matrix.python-version }}]
    runs-on: ${{ matrix.os.image }}
    if: needs.changes.outputs.pytest == 'true'
    needs:
      - changes
      - lockfile
    strategy:
      matrix:
        os:
          - name: Ubuntu
            image: ubuntu-22.04
          - name: macOS
            image: macos-12
          - name: Windows
            image: windows-2022
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/bootstrap-poetry
        with:
          python-version: ${{ matrix.python-version }}

      - run: poetry install --sync --with github-actions

      - run: poetry run pytest --integration -v
        env:
          POETRY_TEST_INTEGRATION_GIT_USERNAME: ${{ github.actor }}
          POETRY_TEST_INTEGRATION_GIT_PASSWORD: ${{ github.token }}

      - run: git diff --exit-code --stat HEAD

  pytest-export:
    name: pytest (poetry-plugin-export) [${{ matrix.os.name }} / Python ${{ matrix.python-version }}]
    runs-on: ${{ matrix.os.image }}
    if: needs.changes.outputs.pytest-export == 'true'
    needs:
      - changes
      - lockfile
    strategy:
      matrix:
        os:
          - name: Ubuntu
            image: ubuntu-22.04
          - name: macOS
            image: macos-12
          - name: Windows
            image: windows-2022
        python-version: ["3.8", "3.9", "3.10", "3.11", "3.12"]
      fail-fast: false
    steps:
      - uses: actions/checkout@v4

      - uses: ./.github/actions/bootstrap-poetry
        with:
          python-version: ${{ matrix.python-version }}

      - run: poetry install --sync --with github-actions

      - id: poetry-plugin-export
        run: echo version=$(poetry run pip list --format json | jq -r '.[] | select(.name == "poetry-plugin-export").version') >> $GITHUB_OUTPUT

      - uses: actions/checkout@v4
        with:
          path: poetry-plugin-export
          repository: python-poetry/poetry-plugin-export
          ref: refs/tags/${{ steps.poetry-plugin-export.outputs.version }}

      - run: poetry run -C .. pytest -v
        working-directory: ./poetry-plugin-export

      - run: git -C poetry-plugin-export diff --exit-code --stat HEAD
